file_list= {'Thorsten_02_07_31/imagmultimodalThorsten', {'leg','auditory'};
            'Steven_02_08_12/imagmultiSteven', {'left','right'};
            'Steven_02_08_12/imagmultiSteven', {'left','auditory'};
            'Steven_02_08_12/imagmultiSteven', {'left','tactile'};
            'Soeren_02_08_13/imagmultiSoeren', {'left','right'};
            'Soeren_02_08_13/imagmultiSoeren', {'left','foot'};
            'Soeren_02_08_13/imagmultiSoeren', {'left','tactile'};
            'Gabriel_01_10_15/imagGabriel', {'left','right'};
            'Steven_02_08_12/imagmultiSteven', {'left','foot'}; 
            'Steven_02_08_12/imagmultiSteven', {'right','auditory'}; 
            'Steven_02_08_12/imagmultiSteven', {'foot','auditory'}; 
            'Steven_02_08_12/imagmultiSteven', {'foot','tactile'}; 
            'Steven_02_08_12/imagmultiSteven', {'auditory','tactile'}; 
            'Hendrik_02_08_12/imagmultiHendrik', {'left','right'};
            'Hendrik_02_08_12/imagmultiHendrik', {'left','foot'};
            'Hendrik_02_08_12/imagmultiHendrik', {'left','auditory'};
            'Hendrik_02_08_12/imagmultiHendrik', {'left','tactile'};
            'Hendrik_02_08_12/imagmultiHendrik', {'right','foot'};
            'Hendrik_02_08_12/imagmultiHendrik', {'right','auditory'};
            'Hendrik_02_08_12/imagmultiHendrik', {'foot','tactile'};
            'Hendrik_02_08_12/imagmultiHendrik', {'auditory','tactile'};
            'Soeren_02_08_13/imagmultiSoeren', {'left','auditory'};
            'Soeren_02_08_13/imagmultiSoeren', {'right','foot'};
            'Soeren_02_08_13/imagmultiSoeren', {'right','auditory'};
            'Soeren_02_08_13/imagmultiSoeren', {'foot','tactile'};
            'Soeren_02_08_13/imagmultiSoeren', {'auditory','tactile'};
            'Ben_02_07_23/imagmultimodalBen', {'leg','visual'};
            'Thorsten_02_07_31/imagmultimodalThorsten', {'leg','visual'};
            'Thorsten_02_07_31/imagmultimodalThorsten', {'auditory','visual'};
            'Steven_02_08_12/imagmultiSteven', {'left','visual'}; ...
            'Steven_02_08_12/imagmultiSteven', {'right','visual'}; ...
            'Steven_02_08_12/imagmultiSteven', {'foot','visual'}; ...
            'Steven_02_08_12/imagmultiSteven', {'auditory','visual'}; ...
            'Steven_02_08_12/imagmultiSteven', {'visual','tactile'}; ...
            'Hendrik_02_08_12/imagmultiHendrik', {'left','visual'};
            'Hendrik_02_08_12/imagmultiHendrik', {'right','visual'};
            'Hendrik_02_08_12/imagmultiHendrik', {'visual','tactile'};
            'Soeren_02_08_13/imagmultiSoeren', {'left','visual'}; ...
            'Soeren_02_08_13/imagmultiSoeren', {'right','visual'}; ...
            'Soeren_02_08_13/imagmultiSoeren', {'visual','tactile'}; ...
            'Kolja_02_09_13/imagmultiKolja', {'left','visual'}};

proc_list= {[7 14], [ 500 3000], 3,  [ 500 3000], 6; ...
            [7 14], [ 500 2500], 3,  [ 500 3000], 6; ...
            [7 14], [ 500 3500], 3,  [ 500 3500], 6; ...
            [7 30], [ 500 3500], 3,  [ 500 2500], 6; ...
            [7 14], [1000 2000], 3,  [ 500 2000], 6; ...
            [7 14], [ 500 2500], 3,  [ 500 2500], 6; ...
            [7 14], [ 500 2000], 3,  [ 500 2000], 6; ...
            [7 14], [ 500 2500], 3,  [ 500 2000], 6; ...
            [7 30], [ 500 3000], 3,  [ 500 3000], 6; ...
            [7 30], [ 500 3500], 3,  [ 500 3500], 6; ...
            [7 14], [ 500 3500], 3,  [ 500 3500], 6; ...
            [7 14], [1000 3000], 3,  [ 500 3500], 6; ...
            [7 14], [ 500 3500], 3,  [ 500 3000], 6; ...
            [7 30], [1000 2000], 3,  [ 500 3000], 6; ...
            [7 14], [1000 2500], 3,  [1000 2500], 6; ...
            [7 14], [1000 3000], 3,  [1000 2500], 6; ...
            [7 30], [1000 3000], 3,  [1000 2000], 6; ...
            [7 14], [1000 3500], 3,  [1000 2500], 6; ...
            [7 14], [1000 3000], 3,  [ 500 3000], 6; ...
            [7 14], [1000 3500], 3,  [1000 2500], 6; ...
            [7 30], [1000 2500], 3,  [ 500 3000], 6; ...
            [7 14], [1000 2500], 3,  [ 500 2500], 6; ...
            [7 14], [ 500 3000], 3,  [1000 3000], 6; ...
            [7 14], [1000 3000], 3,  [ 500 3500], 6; ...
            [7 14], [1000 3500], 3,  [1000 3500], 6; ...
            [7 14], [1000 3500], 3,  [1000 3500], 6; ...
            [7 14], [ 500 3500], 3,  [1000 3000], 6; ...
            [15 26], [500 3000], 3,  [1000 3000], 6; ...
            [15 26], [500 3000], 3,  [ 500 3500], 6; ...
            [7 14], [1000 2000], 3,  [ 500 2000], 6; ...
            [7 30], [ 500 2000], 3,  [1000 2500], 6; ...
            [7 30], [1000 3000], 3,  [1000 2000], 6; ...
            [7 14], [ 500 3500], 3,  [ 500 3000], 6; ...
            [7 30], [ 500 2500], 3,  [1000 3000], 6; ...
            [7 14], [1000 3000], 3,  [1000 2500], 6; ...
            [7 14], [1000 2500], 3,  [ 500 3500], 6; ...
            [7 14], [1000 3000], 3,  [ 500 3000], 6; ...
            [7 14], [1000 2000], 3,  [1000 3000], 6; ...
            [7 14], [1000 2500], 3,  [ 500 3500], 6; ...
            [7 14], [1000 3500], 3,  [1000 2500], 6; ...
            [7 30], [1000 3000], 3,  [ 500 2500], 6};

model= struct('classy','RLDA', 'msDepth',2, 'inflvar',2);
model.param= [0 0.001 0.01 0.1 0.5];
nTrials= [3 10];
msTrials= [2 5];
%nTrials= [10 10];
%msTrials= [3 10];
ar_band= [4 45];

nFiles= length(file_list);
Err= zeros(nFiles, 3);
Class= cell(nFiles, 2);
Subject= cell(nFiles, 1);
%for fi= 1:nFiles,
for fi= file_ival(1):file_ival(2),
  file= file_list{fi,1};
  classes= file_list{fi,2};
  ii= min(find(file=='_'));
  Subject{fi}= file(1:ii-1);
  [csp_band, csp_ival, csp_nPat]= deal(proc_list{fi,1:3});
  [ar_ival, ar_order]= deal(proc_list{fi,4:5});
  
  [cnt,mrk]= loadProcessedEEG(file);
  cnt= proc_selectChannels(cnt, 'not', 'E*');

  clInd= find(ismember(mrk.className, classes));
  if length(clInd)~=2,
    warning('only two class problems, skipping');
    continue;
  end

  cli= find(any(mrk.y(clInd,:)));
  mrk_cl= pickEvents(mrk, cli);
  Class(fi,:)= {mrk_cl.className{:}};
  fprintf('\n%s: <%s> vs <%s>\n', Subject{fi}, Class{fi,:});
  epo= makeSegments(cnt, mrk_cl, [-1500 4000]);
  clear cnt

  csp_chans= {'not', 'Fpz','AF#'};
  ar_chans= {'FC3-4','C3-4','CP3-4','P3-4'};
  if ~isempty(strmatch('auditory', Class(fi,:))),
    ar_chans= cat(2, ar_chans, {'T#'});
  end
  if ~isempty(strmatch('visual', Class(fi,:))),
    ar_chans= cat(2, ar_chans, {'PO#','O#'});
  end

%% RC
  fprintf('\nRC:\n');
  fv= proc_laplace(epo, 'small', ' lap', 'filter all');
  fv= proc_selectChannels(fv, ar_chans);
  [b,a]= getButterFixedOrder(ar_band, fv.fs, 6);
  fv= proc_filt(fv, b, a);
  fv= proc_selectIval(fv, ar_ival);
  fv= proc_rcCoefsPlusVar(fv, ar_order);
  classy= selectModel(fv, model, [msTrials round(9/10*sum(any(fv.y)))]);
  [em,es]= doXvalidationPlus(fv, classy, nTrials, 1);
  Err(fi, 1)= em(1);

  
%% CSP
  fprintf('\nCSP:\n');
  fv= proc_selectChannels(epo, csp_chans);
  [b,a]= getButterFixedOrder(csp_band, fv.fs, 6);
  fv= proc_filt(fv, b, a);
  fv= proc_selectIval(fv, csp_ival);
  fv.proc=['fv= proc_csp(epo, ' int2str(csp_nPat) '); ' ...
           'fv= proc_variance(fv); '];
  
%  classy= selectModel(fv, model, [msTrials round(9/10*sum(any(fv.y)))]);
  classy= 'LDA';
  [em,es]= doXvalidationPlus(fv, classy, nTrials, 1);
  Err(fi, 2)= em(1);

  
%% RC on CSP
  fprintf('\nRC on CSP:\n');

  ival= [min(ar_ival, csp_ival)-2000 max(ar_ival, csp_ival)];
  fv= proc_selectChannels(epo, csp_chans);
  fv.proc= [...
      '[b,a]= getButterFixedOrder([' int2str(csp_band) '], epo.fs, 6); ' ...
      'fv= proc_filt(epo, b, a); ' ...
      'fv= proc_selectIval(fv, [' int2str(csp_ival) ']); ' ...
      '[W,W]= proc_csp(fv, ' int2str(csp_nPat) '); ' ...
      '[b,a]= getButterFixedOrder([' int2str(ar_band) '], epo.fs, 6); ' ...
      'fv= proc_filt(epo, b, a); ' ...
      'fv= proc_linearDerivation(fv, W); ' ...
      'fv= proc_selectIval(fv, [' int2str(ar_ival) ']); ' ...
      'fv= proc_rcCoefsPlusVar(fv, ' int2str(ar_order) '); '];
  
  classy= selectModel(fv, model, [msTrials round(9/10*sum(any(fv.y)))]);
  [em,es]= doXvalidationPlus(fv, classy, nTrials, 1);
  Err(fi, 3)= em(1);

  fprintf('\n%s: <%s> vs <%s>:  %2.1f%%  %2.1f%%  %2.1f%%\n\n', ...
          Subject{fi}, Class{fi,:}, Err(fi, :));
  
  save_name= sprintf('rc_on_csp_%d-%d', file_ival);
  save(save_name, 'file_list','proc_list','Err','model','nTrials','msTrials');
end


%for fi= 1:nFiles,
for fi= file_ival(1):file_ival(2),
  fprintf('%12s: <%8s> vs <%8s>:  %2.1f%%  %2.1f%%  %2.1f%%\n', ...
        Subject{fi}, Class{fi,:}, Err(fi, :));
end
