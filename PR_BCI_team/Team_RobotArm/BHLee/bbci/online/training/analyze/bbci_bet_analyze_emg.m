global hlp_w NO_CLOCK;NO_CLOCK= 1;if ~exist('withgraphics','var')  withgraphics = 1;endif ~exist('withclassification','var')  withclassification = 1;end[emg_b,emg_a] = getFilterEEGband('emg',Cnt.fs); bbci_bet_message('preprocess data\n');cnt = proc_selectChannels(Cnt,opt.clab{:});cnt = proc_bipolarEMG(cnt);cnt = proc_filt(cnt,emg_b,emg_a);epo = makeEpochs(cnt,mrk,opt.ival);features= proc_detectEMG(epo);if bbci.withclassification  bbci_bet_message('Classification: ');  [loss,loss_std] = xvalidation(features, opt.model, [5 10]);  remainmessage = sprintf('Classification: %2.1f +/- %1.1f',100*loss,100*loss_std);  bbci_bet_message('%2.1f +/- %1.1f\n',100*loss,100*loss_std);end% What do we need later?analyze = struct('emg_a', emg_a, 'emg_b', emg_b, 'features', ...                 features, 'message', remainmessage);bbci_bet_message('Finished analysis\n');