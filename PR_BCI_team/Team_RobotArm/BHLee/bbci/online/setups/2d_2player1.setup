setup.general.position = zeros(1,4);
setup.general.position(1,:) = [0    0  800  600];
setup.general.player = zeros(1,1);
setup.general.player(1,:) = [2];
setup.general.graphic = zeros(1,1);
setup.general.graphic(1,:) = [1];
setup.general.setup_list1 = cell(0,0);
setup.general.setup_list2 = cell(0,0);
setup.general.setup_list_default1 = cell(0,0);
setup.general.setup_list_default2 = cell(0,0);
setup.general.setup_directory = 'c:\blanker\neuro_cvs\matlab\bci/bbci_bet/setups/';
setup.control_player1.machine = 'bot04';
setup.control_player1.port = zeros(1,1);
setup.control_player1.port(1,:) = [12470];
setup.control_player1.fields = cell(1,7);
setup.control_player1.fields{1,1} = 'cls.alpha';
setup.control_player1.fields{1,2} = 'cls.bias';
setup.control_player1.fields{1,3} = 'cls.dist';
setup.control_player1.fields{1,4} = 'cls.integrate';
setup.control_player1.fields{1,5} = 'cls.range';
setup.control_player1.fields{1,6} = 'cls.scale';
setup.control_player1.fields{1,7} = 'feature.ilen_apply';
setup.control_player1.fields_help = cell(1,7);
setup.control_player1.fields_help{1,1} = 'the output is taken to the power of this value';
setup.control_player1.fields_help{1,2} = 'to add some constant/bias to the output';
setup.control_player1.fields_help{1,3} = 'A threshold inbetween output should be set to zero';
setup.control_player1.fields_help{1,4} = 'to calculate moving averages of the output';
setup.control_player1.fields_help{1,5} = 'the range the classifier output can be';
setup.control_player1.fields_help{1,6} = 'the scaling of the classifier output';
setup.control_player1.fields_help{1,7} = 'the length of the used time window';
setup.control_player1.cls.alpha = zeros(1,1);
setup.control_player1.cls.alpha(1,:) = [1];
setup.control_player1.cls.bias = zeros(1,1);
setup.control_player1.cls.bias(1,:) = [0];
setup.control_player1.cls.dist = zeros(1,1);
setup.control_player1.cls.dist(1,:) = [0];
setup.control_player1.cls.integrate = zeros(1,1);
setup.control_player1.cls.integrate(1,:) = [8];
setup.control_player1.cls.range = zeros(1,2);
setup.control_player1.cls.range(1,:) = [-1  1];
setup.control_player1.cls.scale = zeros(1,1);
setup.control_player1.cls.scale(1,:) = [0.1];
setup.control_player1.feature.ilen_apply = zeros(1,1);
setup.control_player1.feature.ilen_apply(1,:) = [1000];
setup.control_player2.machine = 'bot05';
setup.control_player2.port = zeros(1,1);
setup.control_player2.port(1,:) = [12469];
setup.control_player2.fields = cell(1,7);
setup.control_player2.fields{1,1} = 'cls.alpha';
setup.control_player2.fields{1,2} = 'cls.bias';
setup.control_player2.fields{1,3} = 'cls.dist';
setup.control_player2.fields{1,4} = 'cls.integrate';
setup.control_player2.fields{1,5} = 'cls.range';
setup.control_player2.fields{1,6} = 'cls.scale';
setup.control_player2.fields{1,7} = 'feature.ilen_apply';
setup.control_player2.fields_help = cell(1,7);
setup.control_player2.fields_help{1,1} = 'the output is taken to the power of this value';
setup.control_player2.fields_help{1,2} = 'to add some constant/bias to the output';
setup.control_player2.fields_help{1,3} = 'A threshold inbetween output should be set to zero';
setup.control_player2.fields_help{1,4} = 'to calculate moving averages of the output';
setup.control_player2.fields_help{1,5} = 'the range the classifier output can be';
setup.control_player2.fields_help{1,6} = 'the scaling of the classifier output';
setup.control_player2.fields_help{1,7} = 'the length of the used time window';
setup.control_player2.cls.alpha = zeros(1,1);
setup.control_player2.cls.alpha(1,:) = [1];
setup.control_player2.cls.bias = zeros(1,1);
setup.control_player2.cls.bias(1,:) = [0];
setup.control_player2.cls.dist = zeros(1,1);
setup.control_player2.cls.dist(1,:) = [0];
setup.control_player2.cls.integrate = zeros(1,1);
setup.control_player2.cls.integrate(1,:) = [8];
setup.control_player2.cls.range = zeros(1,2);
setup.control_player2.cls.range(1,:) = [-1  1];
setup.control_player2.cls.scale = zeros(1,1);
setup.control_player2.cls.scale(1,:) = [0.1];
setup.control_player2.feature.ilen_apply = zeros(1,1);
setup.control_player2.feature.ilen_apply(1,:) = [1000];
setup.graphic_player1.machine = 'brainamp';
setup.graphic_player1.port = zeros(1,1);
setup.graphic_player1.port(1,:) = [12471];
setup.graphic_player1.fb_port = zeros(1,1);
setup.graphic_player1.fb_port(1,:) = [12489];
setup.graphic_player1.fields = cell(1,27);
setup.graphic_player1.fields{1,1} = 'feedback_opt.balanced_sequence';
setup.graphic_player1.fields{1,2} = 'feedback_opt.countdown';
setup.graphic_player1.fields{1,3} = 'feedback_opt.free_balls';
setup.graphic_player1.fields{1,4} = 'feedback_opt.free_region';
setup.graphic_player1.fields{1,5} = 'feedback_opt.fs';
setup.graphic_player1.fields{1,6} = 'feedback_opt.log';
setup.graphic_player1.fields{1,7} = 'feedback_opt.marker_active';
setup.graphic_player1.fields{1,8} = 'feedback_opt.marker_active_size';
setup.graphic_player1.fields{1,9} = 'feedback_opt.marker_nonactive';
setup.graphic_player1.fields{1,10} = 'feedback_opt.marker_nonactive_size';
setup.graphic_player1.fields{1,11} = 'feedback_opt.matchpoints';
setup.graphic_player1.fields{1,12} = 'feedback_opt.middleposition';
setup.graphic_player1.fields{1,13} = 'feedback_opt.next_target';
setup.graphic_player1.fields{1,14} = 'feedback_opt.next_target_width';
setup.graphic_player1.fields{1,15} = 'feedback_opt.pass_nontargets';
setup.graphic_player1.fields{1,16} = 'feedback_opt.position';
setup.graphic_player1.fields{1,17} = 'feedback_opt.relational';
setup.graphic_player1.fields{1,18} = 'feedback_opt.score';
setup.graphic_player1.fields{1,19} = 'feedback_opt.sequence';
setup.graphic_player1.fields{1,20} = 'feedback_opt.show_bit';
setup.graphic_player1.fields{1,21} = 'feedback_opt.target_dist';
setup.graphic_player1.fields{1,22} = 'feedback_opt.target_mode';
setup.graphic_player1.fields{1,23} = 'feedback_opt.target_width';
setup.graphic_player1.fields{1,24} = 'feedback_opt.time_after_hit';
setup.graphic_player1.fields{1,25} = 'feedback_opt.time_before_free';
setup.graphic_player1.fields{1,26} = 'feedback_opt.time_constraint';
setup.graphic_player1.fields{1,27} = 'feedback_opt.type';
setup.graphic_player1.fields_help = cell(1,27);
setup.graphic_player1.fields_help{1,1} = 'if sequence is set to Z, this flag determinces that all classes should be ordered the same number during a match';
setup.graphic_player1.fields_help{1,2} = 'the countdown in msec before start';
setup.graphic_player1.fields_help{1,3} = 'number of free balls in the beginning of the game';
setup.graphic_player1.fields_help{1,4} = 'the region the cursor has to touch to get activated';
setup.graphic_player1.fields_help{1,5} = 'the frequency packages are sent';
setup.graphic_player1.fields_help{1,6} = 'to write a log file';
setup.graphic_player1.fields_help{1,7} = 'the color and symbol of the activated cursor';
setup.graphic_player1.fields_help{1,8} = 'size and linwidth of the activated cursor';
setup.graphic_player1.fields_help{1,9} = 'the color and symbol of the non-activated cursor';
setup.graphic_player1.fields_help{1,10} = 'size and linwidth of the non-activated cursor';
setup.graphic_player1.fields_help{1,11} = 'the number of points to end the match';
setup.graphic_player1.fields_help{1,12} = 'to start cursor movement linear increasing during this time';
setup.graphic_player1.fields_help{1,13} = 'true if the next target should be shown in advance';
setup.graphic_player1.fields_help{1,14} = 'width relative to button width for next_target';
setup.graphic_player1.fields_help{1,15} = 'true if false achieved targets should be ignored';
setup.graphic_player1.fields_help{1,16} = 'the position of the feedback window';
setup.graphic_player1.fields_help{1,17} = 'for relative cursor control';
setup.graphic_player1.fields_help{1,18} = 'the score should be shown';
setup.graphic_player1.fields_help{1,19} = 'a sequence which should be ordered';
setup.graphic_player1.fields_help{1,20} = 'true if the bitrate should be shown finally';
setup.graphic_player1.fields_help{1,21} = 'the distance between two targets';
setup.graphic_player1.fields_help{1,22} = 'the target mode of the feedback';
setup.graphic_player1.fields_help{1,23} = 'the width of the target';
setup.graphic_player1.fields_help{1,24} = 'time in msec after hit next object will be ordered';
setup.graphic_player1.fields_help{1,25} = 'the earliest time in msec after order cursor can be activated';
setup.graphic_player1.fields_help{1,26} = 'time in msec a run can take time maximally';
setup.graphic_player1.fields_help{1,27} = 'the name of the matlab feedback';
setup.graphic_player1.feedback_opt.balanced_sequence = zeros(1,1);
setup.graphic_player1.feedback_opt.balanced_sequence(1,:) = [1];
setup.graphic_player1.feedback_opt.countdown = zeros(1,1);
setup.graphic_player1.feedback_opt.countdown(1,:) = [5000];
setup.graphic_player1.feedback_opt.free_balls = zeros(1,1);
setup.graphic_player1.feedback_opt.free_balls(1,:) = [0];
setup.graphic_player1.feedback_opt.free_region = zeros(1,1);
setup.graphic_player1.feedback_opt.free_region(1,:) = [0.4];
setup.graphic_player1.feedback_opt.fs = zeros(1,1);
setup.graphic_player1.feedback_opt.fs(1,:) = [25];
setup.graphic_player1.feedback_opt.log = zeros(1,1);
setup.graphic_player1.feedback_opt.log(1,:) = [1];
setup.graphic_player1.feedback_opt.marker_active = 'r+';
setup.graphic_player1.feedback_opt.marker_active_size = zeros(1,2);
setup.graphic_player1.feedback_opt.marker_active_size(1,:) = [60  15];
setup.graphic_player1.feedback_opt.marker_nonactive = 'k.';
setup.graphic_player1.feedback_opt.marker_nonactive_size = zeros(1,2);
setup.graphic_player1.feedback_opt.marker_nonactive_size(1,:) = [50   5];
setup.graphic_player1.feedback_opt.matchpoints = zeros(1,1);
setup.graphic_player1.feedback_opt.matchpoints(1,:) = [50];
setup.graphic_player1.feedback_opt.middleposition = zeros(1,1);
setup.graphic_player1.feedback_opt.middleposition(1,:) = [0];
setup.graphic_player1.feedback_opt.next_target = zeros(1,1);
setup.graphic_player1.feedback_opt.next_target(1,:) = [0];
setup.graphic_player1.feedback_opt.next_target_width = zeros(1,1);
setup.graphic_player1.feedback_opt.next_target_width(1,:) = [0.1];
setup.graphic_player1.feedback_opt.pass_nontargets = zeros(1,1);
setup.graphic_player1.feedback_opt.pass_nontargets(1,:) = [0];
setup.graphic_player1.feedback_opt.position = zeros(1,4);
setup.graphic_player1.feedback_opt.position(1,:) = [0 -1024  1280  1028];
setup.graphic_player1.feedback_opt.relational = zeros(1,1);
setup.graphic_player1.feedback_opt.relational(1,:) = [0];
setup.graphic_player1.feedback_opt.score = zeros(1,1);
setup.graphic_player1.feedback_opt.score(1,:) = [1];
setup.graphic_player1.feedback_opt.sequence = 'Z';
setup.graphic_player1.feedback_opt.show_bit = zeros(1,1);
setup.graphic_player1.feedback_opt.show_bit(1,:) = [1];
setup.graphic_player1.feedback_opt.target_dist = zeros(1,1);
setup.graphic_player1.feedback_opt.target_dist(1,:) = [0.1];
setup.graphic_player1.feedback_opt.target_mode = zeros(1,1);
setup.graphic_player1.feedback_opt.target_mode(1,:) = [1];
setup.graphic_player1.feedback_opt.target_width = zeros(1,1);
setup.graphic_player1.feedback_opt.target_width(1,:) = [0.1];
setup.graphic_player1.feedback_opt.time_after_hit = zeros(1,1);
setup.graphic_player1.feedback_opt.time_after_hit(1,:) = [500];
setup.graphic_player1.feedback_opt.time_before_free = zeros(1,1);
setup.graphic_player1.feedback_opt.time_before_free(1,:) = [500];
setup.graphic_player1.feedback_opt.time_constraint = zeros(1,1);
setup.graphic_player1.feedback_opt.time_constraint(1,:) = [0];
setup.graphic_player1.feedback_opt.type = 'feedback_2d';
setup.graphic_player2.machine = 'brainamp';
setup.graphic_player2.port = zeros(1,1);
setup.graphic_player2.port(1,:) = [12470];
setup.graphic_player2.fb_port = zeros(1,1);
setup.graphic_player2.fb_port(1,:) = [12488];
setup.graphic_player2.fields = cell(1,27);
setup.graphic_player2.fields{1,1} = 'feedback_opt.balanced_sequence';
setup.graphic_player2.fields{1,2} = 'feedback_opt.countdown';
setup.graphic_player2.fields{1,3} = 'feedback_opt.free_balls';
setup.graphic_player2.fields{1,4} = 'feedback_opt.free_region';
setup.graphic_player2.fields{1,5} = 'feedback_opt.fs';
setup.graphic_player2.fields{1,6} = 'feedback_opt.log';
setup.graphic_player2.fields{1,7} = 'feedback_opt.marker_active';
setup.graphic_player2.fields{1,8} = 'feedback_opt.marker_active_size';
setup.graphic_player2.fields{1,9} = 'feedback_opt.marker_nonactive';
setup.graphic_player2.fields{1,10} = 'feedback_opt.marker_nonactive_size';
setup.graphic_player2.fields{1,11} = 'feedback_opt.matchpoints';
setup.graphic_player2.fields{1,12} = 'feedback_opt.middleposition';
setup.graphic_player2.fields{1,13} = 'feedback_opt.next_target';
setup.graphic_player2.fields{1,14} = 'feedback_opt.next_target_width';
setup.graphic_player2.fields{1,15} = 'feedback_opt.pass_nontargets';
setup.graphic_player2.fields{1,16} = 'feedback_opt.position';
setup.graphic_player2.fields{1,17} = 'feedback_opt.relational';
setup.graphic_player2.fields{1,18} = 'feedback_opt.score';
setup.graphic_player2.fields{1,19} = 'feedback_opt.sequence';
setup.graphic_player2.fields{1,20} = 'feedback_opt.show_bit';
setup.graphic_player2.fields{1,21} = 'feedback_opt.target_dist';
setup.graphic_player2.fields{1,22} = 'feedback_opt.target_mode';
setup.graphic_player2.fields{1,23} = 'feedback_opt.target_width';
setup.graphic_player2.fields{1,24} = 'feedback_opt.time_after_hit';
setup.graphic_player2.fields{1,25} = 'feedback_opt.time_before_free';
setup.graphic_player2.fields{1,26} = 'feedback_opt.time_constraint';
setup.graphic_player2.fields{1,27} = 'feedback_opt.type';
setup.graphic_player2.fields_help = cell(1,27);
setup.graphic_player2.fields_help{1,1} = 'if sequence is set to Z, this flag determinces that all classes should be ordered the same number during a match';
setup.graphic_player2.fields_help{1,2} = 'the countdown in msec before start';
setup.graphic_player2.fields_help{1,3} = 'number of free balls in the beginning of the game';
setup.graphic_player2.fields_help{1,4} = 'the region the cursor has to touch to get activated';
setup.graphic_player2.fields_help{1,5} = 'the frequency packages are sent';
setup.graphic_player2.fields_help{1,6} = 'to write a log file';
setup.graphic_player2.fields_help{1,7} = 'the color and symbol of the activated cursor';
setup.graphic_player2.fields_help{1,8} = 'size and linwidth of the activated cursor';
setup.graphic_player2.fields_help{1,9} = 'the color and symbol of the non-activated cursor';
setup.graphic_player2.fields_help{1,10} = 'size and linwidth of the non-activated cursor';
setup.graphic_player2.fields_help{1,11} = 'the number of points to end the match';
setup.graphic_player2.fields_help{1,12} = 'to start cursor movement linear increasing during this time';
setup.graphic_player2.fields_help{1,13} = 'true if the next target should be shown in advance';
setup.graphic_player2.fields_help{1,14} = 'width relative to button width for next_target';
setup.graphic_player2.fields_help{1,15} = 'true if false achieved targets should be ignored';
setup.graphic_player2.fields_help{1,16} = 'the position of the feedback window';
setup.graphic_player2.fields_help{1,17} = 'for relative cursor control';
setup.graphic_player2.fields_help{1,18} = 'the score should be shown';
setup.graphic_player2.fields_help{1,19} = 'a sequence which should be ordered';
setup.graphic_player2.fields_help{1,20} = 'true if the bitrate should be shown finally';
setup.graphic_player2.fields_help{1,21} = 'the distance between two targets';
setup.graphic_player2.fields_help{1,22} = 'the target mode of the feedback';
setup.graphic_player2.fields_help{1,23} = 'the width of the target';
setup.graphic_player2.fields_help{1,24} = 'time in msec after hit next object will be ordered';
setup.graphic_player2.fields_help{1,25} = 'the earliest time in msec after order cursor can be activated';
setup.graphic_player2.fields_help{1,26} = 'time in msec a run can take time maximally';
setup.graphic_player2.fields_help{1,27} = 'the name of the matlab feedback';
setup.graphic_player2.feedback_opt.balanced_sequence = zeros(1,1);
setup.graphic_player2.feedback_opt.balanced_sequence(1,:) = [1];
setup.graphic_player2.feedback_opt.countdown = zeros(1,1);
setup.graphic_player2.feedback_opt.countdown(1,:) = [5000];
setup.graphic_player2.feedback_opt.free_balls = zeros(1,1);
setup.graphic_player2.feedback_opt.free_balls(1,:) = [0];
setup.graphic_player2.feedback_opt.free_region = zeros(1,1);
setup.graphic_player2.feedback_opt.free_region(1,:) = [0.4];
setup.graphic_player2.feedback_opt.fs = zeros(1,1);
setup.graphic_player2.feedback_opt.fs(1,:) = [25];
setup.graphic_player2.feedback_opt.log = zeros(1,1);
setup.graphic_player2.feedback_opt.log(1,:) = [1];
setup.graphic_player2.feedback_opt.marker_active = 'r+';
setup.graphic_player2.feedback_opt.marker_active_size = zeros(1,2);
setup.graphic_player2.feedback_opt.marker_active_size(1,:) = [60  15];
setup.graphic_player2.feedback_opt.marker_nonactive = 'k.';
setup.graphic_player2.feedback_opt.marker_nonactive_size = zeros(1,2);
setup.graphic_player2.feedback_opt.marker_nonactive_size(1,:) = [50   5];
setup.graphic_player2.feedback_opt.matchpoints = zeros(1,1);
setup.graphic_player2.feedback_opt.matchpoints(1,:) = [50];
setup.graphic_player2.feedback_opt.middleposition = zeros(1,1);
setup.graphic_player2.feedback_opt.middleposition(1,:) = [0];
setup.graphic_player2.feedback_opt.next_target = zeros(1,1);
setup.graphic_player2.feedback_opt.next_target(1,:) = [0];
setup.graphic_player2.feedback_opt.next_target_width = zeros(1,1);
setup.graphic_player2.feedback_opt.next_target_width(1,:) = [0.1];
setup.graphic_player2.feedback_opt.pass_nontargets = zeros(1,1);
setup.graphic_player2.feedback_opt.pass_nontargets(1,:) = [0];
setup.graphic_player2.feedback_opt.position = zeros(1,4);
setup.graphic_player2.feedback_opt.position(1,:) = [0     0  1280  1028];
setup.graphic_player2.feedback_opt.relational = zeros(1,1);
setup.graphic_player2.feedback_opt.relational(1,:) = [0];
setup.graphic_player2.feedback_opt.score = zeros(1,1);
setup.graphic_player2.feedback_opt.score(1,:) = [1];
setup.graphic_player2.feedback_opt.sequence = 'Z';
setup.graphic_player2.feedback_opt.show_bit = zeros(1,1);
setup.graphic_player2.feedback_opt.show_bit(1,:) = [1];
setup.graphic_player2.feedback_opt.target_dist = zeros(1,1);
setup.graphic_player2.feedback_opt.target_dist(1,:) = [0.1];
setup.graphic_player2.feedback_opt.target_mode = zeros(1,1);
setup.graphic_player2.feedback_opt.target_mode(1,:) = [1];
setup.graphic_player2.feedback_opt.target_width = zeros(1,1);
setup.graphic_player2.feedback_opt.target_width(1,:) = [0.1];
setup.graphic_player2.feedback_opt.time_after_hit = zeros(1,1);
setup.graphic_player2.feedback_opt.time_after_hit(1,:) = [500];
setup.graphic_player2.feedback_opt.time_before_free = zeros(1,1);
setup.graphic_player2.feedback_opt.time_before_free(1,:) = [500];
setup.graphic_player2.feedback_opt.time_constraint = zeros(1,1);
setup.graphic_player2.feedback_opt.time_constraint(1,:) = [0];
setup.graphic_player2.feedback_opt.type = 'feedback_2d';
setup.setup_directory = 'C:\blanker\neuro_cvs\matlab\bci\bbci_bet\setups\';
