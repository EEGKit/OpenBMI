function [hh] = feedback_tappedCross_init(fig, opt);

fast_fig= {'renderer','painters'};
fast_axis= {'clipping','off', 'hitTest','off', 'interruptible','off', ...
            'drawMode','fast'};
fast_obj= {'eraseMode','xor', 'hitTest','off', 'interruptible','off'};

clf;
set(fig, 'Menubar','none', 'Resize','off', ...
         'Pointer','custom', 'PointerShapeCData', NaN*ones(16), ...
         'position',opt.position, ...
         'color',opt.background_color, ...
         'DoubleBuffer','on', fast_fig{:});

set(gca, 'xLim',[-1 1], 'yLim',[-1 1], 'position',[0 0 1 1], ...
         'visible','off', 'nextPlot','add', fast_axis{:});

%% prepare cursor
h_cursor= plot(0, 0, 'marker', opt.cursor_inactive_type, ...
               'markerSize', opt.cursor_inactive_size(1), ...
               'lineWidth', opt.cursor_inactive_size(2), ...
               'color', opt.cursor_inactive_color, fast_obj{:});
h_tail= plot(zeros(2,opt.tail_length), zeros(2,opt.tail_length), ...
             'color', opt.tail_color, ...
             'lineWidth', opt.tail_linewidth, ...
             'marker', opt.tail_marker, ...
             'markerSize', opt.tail_markersize, fast_obj{:});

%% prepare text objects (counter and messages)
h_msg= text(0, 0, 'o', 'visible','off', 'fontUnits','normalized', ...
             'fontSize',opt.msg_fontsize);
h_stim= text(opt.stimulus_pos(1), opt.stimulus_pos(2), '0:0', ...
             'color',opt.stimulus_color, ...
             'fontUnits','normalized', ...
             'fontSize',opt.stimulus_fontsize, 'visible','off');
h_counter= text(opt.counter_pos(1), opt.counter_pos(2), '0:0', ...
                'fontUnits','normalized', ...
                'fontSize',opt.counter_fontsize);
set(h_counter, 'visible',opt.counter_visible);
set([h_counter, h_msg, h_stim], ...
    'horizontalAli','center', 'verticalAli','middle');

%% prepare target patches
if strcmp(opt.direction, 'horizontal'),
  xx= [1 1 opt.patch_x([2 1 1])];
  yy= [1 opt.patch_y([1 1 2]) 1];
else
  xx= [1 opt.patch_y([1 1 2]) 1];
  yy= [1 1 opt.patch_x([2 1 1])];
end
h_patch(2)= patch(xx, yy, opt.nontarget_color(2,:), fast_obj{:});
if strcmp(opt.direction, 'horizontal'),
  xx= -xx;
else
  yy= -yy;
end
h_patch(1)= patch(xx, yy, opt.nontarget_color(1,:), fast_obj{:});
set(h_patch, 'edgeColor','none');

%% prepare fixation cross
pos= get(gcf, 'position');
xyr= pos(3)/pos(4);
h_fix= line([-1 1; 0 0]'*opt.fixation_size(1) + opt.fixation_position(1), ...
            [0 0; -1 1]'*opt.fixation_size(1)*xyr + opt.fixation_position(2));
set(h_fix, 'color',opt.fixation_color, ...
           'lineWidth',opt.fixation_size(2), ...
           'visible',opt.fixation_visible);

% here come the return values:
hh = [fig, gca, h_cursor, h_fix', h_counter, h_msg, h_stim, h_patch, ...
      h_tail'];
