function bbci= bbci_calibrate_setDefaults(bbci)
%BBCI_CALIBRATE_SETDEFAULTS - Set default values in bbci for bbci_calibrate
%
%Synopsis:
%  BBCI= bbci_calibrate_setDefaults
%  BBCI= bbci_calibrate_setDefaults(BBCI)
%
%Arguments:
%  BBCI - Structure of bbci_calibrate which specifies calibration data
%      and methods to determine parameters of feature extraction and
%      classification, type 'help bbci_calibrate_structures' for detailed
%      information about the fields of this structure.
%
%Output:
%  BBCI - Updated bbci structure

% 09-2011 Benjamin Blankertz


global TODAY_DIR

if nargin==0,
  bbci= [];
end

bbci= set_defaults(bbci, ...
                   'calibrate', struct);

bbci.calibrate= set_defaults(bbci.calibrate, ...
                             'folder', TODAY_DIR, ...
                             'file', '', ...
                             'read_fcn', @eegfile_readBV, ...
                             'read_param', {}, ...
                             'marker_fcn', [], ...
                             'marker_param', {}, ...
                             'montage_fcn', @getElectrodePositions, ...
                             'montage_param', {}, ...
                             'fcn', [], ...
                             'settings', struct, ...
                             'log', struct, ...
                             'save', struct);

default_save_file= 'bbci_classifier';
default_log_file= 'bbci_calibrate_log';
if ~isempty(bbci.calibrate.fcn),
  appendix= strrep(func2str(bbci.calibrate.fcn), 'bbci_calibrate', '');
  default_save_file= [default_save_file appendix];
  default_log_file= [default_log_file appendix];
end
bbci= bbci_save_setDefaults(bbci, ...
                            'folder', bbci.calibrate.folder, ...
                            'file', default_save_file);

bbci.calibrate.log= ...
    set_defaults(bbci.calibrate.log, ...
                 'output', 'screen&file', ...
                 'folder', bbci.calibrate.folder, ...
                 'file', default_log_file, ...
                 'force_overwriting', 0);
