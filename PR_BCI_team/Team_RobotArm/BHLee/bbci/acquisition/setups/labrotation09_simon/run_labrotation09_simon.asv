
if ~exist('TODAY_DIR','var')
  startup_bbcilaptop05
end

if isempty(TODAY_DIR)
  setup_labrotation09_simon
end

%fprintf('Start script ''bvToPyff.m'' in a new matlab, then press key to continue.\n');
%pause

testing = 0;

if ~testing
  nTestBlocks = 0;
  nTrainBlocks_none = 1;
  nTrainBlocks_random = 4;
  nFeedbackBlocks = 7;
else
  disp('Test run (i.e. less trials per block)!')
  nTestBlocks = 0;
  nTrainBlocks_none = 1;
  nTrainBlocks_random = 1;
  nFeedbackBlocks = 1;
end

%bvr_sendcommand('checkimpedances');
%fprintf('Prepare cap. Press <RETURN> when finished.\n');
%pause

system('cmd /C "d: & cd \svn\pyff\src & python FeedbackController.py -l debug -p FeedbackControllerPlugins --additional-feedback-path=D:\svn\pyff_external_feedbacks" &');
bvr_sendcommand('viewsignals');
pause(5)
send_xmlcmd_udp('init', general_port_fields.bvmachine, 12345);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%% TEST BLOCK %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for block = 1:nTestBlocks
  curr_block = 'test';
  if block < nTestBlocks/2
    showClassifier = 'none';
  else
    showClassifier = 'random';
  end
  fprintf(['Press <return> to start the next test block (showClassifier="' showClassifier '")\n']);
  pause
  if testing
    nTrials = 2;
  else
    nTrials = 10;
  end
eval('exp_block')
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%% TRAINING BLOCKS %%%%%%%%%%%%%%%%%%%%%%%%%%%%
for block = 1:nTrainBlocks_none+nTrainBlocks_random
  curr_block = 'train';
  fprintf(['Press <return> to start the next training block.\n']);
  pause
  if block<=nTrainBlocks_none
    showClassifier = 'none';
  else
    showClassifier = 'random';
  end
  if testing
    nTrials = 2;
  else
    nTrials = 40;
  end
  exp_block
end


%%%%%%%%%%%%%%%%%%%%%%%%%% TRAIN CLASSFIER %%%%%%%%%%%%%%%%%%%%%%%%%%%%
fprintf('\nTrain classifier...\n');
[dmy, subdir]= fileparts(TODAY_DIR(1:end-1));
bbci= []; bbci.setup_opts = [];
bbci = set_defaults(bbci, 'setup', 'cspauto', ...
                          'train_file', strcat(subdir, '/lc_train*'), ... 
                          'clab', {'not','E*','Fp*','AF*','FAF*','*9','*10','O*','I*','PO7,8'}, ...
                          'classDef', {{'KP'}, {'noKP'}; 'KP', 'noKP'}, ...
                          'func_mrk', 'mrk_addnokeypress', ...
                          'feedback', '1d', ...
                          'train_file', strcat(subdir, {'/lc_train*'}), ...
                          'save_name', strcat(TODAY_DIR, 'lc_classifier_cspauto'), ...
                          'setup_file', strcat(TODAY_DIR, 'lc_classifier_cspauto_setup_001'));
if testing
  bbci.impedance_threshold = [];
end 
                        
bbci.setup_opts = set_defaults(bbci.setup_opts, 'model', {'RLDAshrink', 'gamma',0, 'scaling',1, 'store_means',1}, ...
                                                'check_ival', [-1500 500],...
                                                'default_ival', [-1500 500],...
                                                'visu_ival', [-1500 500], ...
                                                'func_adaptBias', 'adapt_bias', ...    % script to be executed for adapting the bias of the classifier
                                                'verbose', 2, ...
                                                'usedPat', 'auto');     %If'auto' mode does not work robustly:
                                                                        %bbci.setup_opts.usedPat= [1:6];                                                
bbci_bet_prepare
bbci_bet_analyze
fprintf('Type ''dbcont'' to save classifier and proceed. To change the setup to be used, edit bbci.setup_file.\n');
keyboard
bbci_bet_finish
close all

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%% FEEDBACK BLOCKS %%%%%%%%%%%%%%%%%%%%%%%%%%%%

fprintf('Start Feedback\n');
for block = 1:nFeedbackBlocks
  curr_block = 'feedback';
  fprintf(['Press <return> to start the next feedback block.\n']);
  pause
  if testing
    nTrials = 10;
  else
    nTrials = 40;
  end
  exp_block_feedback
end

