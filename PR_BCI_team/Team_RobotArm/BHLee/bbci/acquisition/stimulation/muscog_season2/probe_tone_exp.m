function []=probe_tone_exp(order,sounds_key,varargin)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Irene Sturm 11/2007
% [] = probe_tone_exp(order,sounds_key) plays stimuli for MiMu experiment
%                                       according to order (generated by load_mimu)
%                                       using sounds in sounds_key
% in:
%      'order'     struct with fields (generated by load_mimu.m):
%                   .probe_tones    : vector that specifies the interval of each pitch change in number of
%                   semitones. E.g. [1 4 7] means the first change of pitch is one semitone up, the second 
%                   4 semitones up.
%                   .sequence       : sequence of keys played.
%                   .reps           : number of repetitions for each trial.
%     'sounds_key'  cell array (size [1 12]) containing the sounds
%                   for 12 pitches used (generated by load_mimu.m).
%
% 
%     'order'    matrix with columns that specify key/probetone/mode
%                   combinations for stimuli. 
%
%     'sounds_key'  cell array (size [nModes nKeys]) containing the sounds
%                   for the key establishing stimuli
%
%     'sounds_pt'   cell array (size [1 nProbetones]) containing the sounds
%                   for probetone stimuli
%
% out:
% 
%
% [opt mrp]=probe_tone_exp('PARAM1',val1, 'PARAM2',val2,...)
%   specifies one or more of the following name/value pairs:
%
%
%     'aso'         Asynchronous stimulus onset.Time between one onset
%                   and the next.Default 0.42.
%
% Triggers:
% 
% 101-112   : key : 1 for C, 2 for C#, 3 for D,...
% R 101- R 107   : responses
% examples: 
%
% [order, sounds_key] = load_mimu()
% probe_tone_exp(order, sounds_key)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%         


opt=propertylist2struct(varargin{:});
opt=set_defaults(opt,'fs',44100,'howmany','all','aso',0.44);
pitches = {'C','C#','D','Eb','E','F','F#','G','G#','A','Bb','B'};


num_trials = size(order.sequence,2);

%how many of the generated sequences are played? (for testing) 
if isempty(~strmatch(opt.howmany,'all'))
    h=opt.howmany;
else
   
    h=num_trials;
end    


if(h~=0)
    for k=1:h
        num_rep = order.reps(k); 
        for l = 1:num_rep
            %fprintf(['playing key ' order.sequence(k) '\n']);
            tone=sounds_key{strmatch(order.sequence(k),pitches,'exact')};
            ppTrigger(strmatch(order.sequence(k),pitches,'exact'));
            %waitforSync(0.1)
            %p=audioplayer(tone, opt.fs)
            %playblocking(p)
            wavplay(tone,opt.fs,'sync');
            pause(opt.aso-opt.duration)

        end 
    end
end
    
    
