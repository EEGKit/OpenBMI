function h= stimutil_break(varargin)%STIMUTIL_BREAK - Announce a Break and Wait%%Synopsis:% HANDLE= stimutil_break(<OPT>)%%Arguments:% OPT: struct or property/value list of optional arguments:% 'handle_msg': Handle to text object which is used to display the% countdown%    message. If empty a new object is generated.% 'break_msg': String. Default 'Short break for %d s'.% 'break_markers': [start_marker end_marker] or []. Default [249 250].% 'break_duration': in seconds.% 'break_countdown': Duration of countdown [s] after break, Default: 7.%%Returns:% HANDLE: Handle to text object.% blanker@cs.tu-berlin.de, Jul-2007opt= propertylist2struct(varargin{:});opt= set_defaults(opt, ...                  'handle_msg', [], ...                  'break_msg', 'Short break for %d s', ...                  'break_markers', [249 250], ...                  'break_duration', 15, ...                  'break_countdown', 7);if ~isempty(opt.break_markers),  ppTrigger(opt.break_markers(1));endopt.handle_msg= stimutil_initMsg(opt);msg= sprintf(opt.break_msg, opt.break_duration);set(opt.handle_msg, 'String', msg);pause(opt.break_duration);stimutil_countdown(opt.break_countdown, opt);if ~isempty(opt.break_markers),  ppTrigger(opt.break_markers(2));endpause(1);if nargout>0,  h= opt.handle_msg;end